# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.
#
# OpenCRVS is also distributed under the terms of the Civil Registration
# & Healthcare Disclaimer located at http://opencrvs.org/license.
#
# Copyright (C) The OpenCRVS Authors. OpenCRVS and the OpenCRVS
# graphic logo are (registered/a) trademark(s) of Plan International.
version: '3.3'

services:
  # Configure reverse proxy for public endpoints
  # Note: these published port will override UFW rules as Docker manages it's own iptables
  # Only publish the exact ports that are required for OpenCRVS to work
  traefik:
    image: traefik:1.7.16
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /data/traefik/acme.json:/acme.json
    configs:
      - source: traefik.{{ts}}
        target: /etc/traefik/traefik.toml
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    networks:
      - overlay_net
    secrets:
      - kibana-htpasswd

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:7.17.0

    user: root
    volumes:
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - KIBANA_HOST=kibana:5601
      - ELASTICSEARCH_HOST=elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=changeme
    command: ['--strict.perms=false', '-system.hostfs=/hostfs']
    hostname: 'metricbeat-{{.Node.Hostname}}'
    restart: always
    deploy:
      mode: global
    networks:
      - overlay_net
    configs:
      - source: metricbeat-conf.{{ts}}
        target: /usr/share/metricbeat/metricbeat.yml

  setup-kibana-alerts:
    image: node:17.6.0-alpine
    command: node /usr/app/setup-alerts.js
    restart: on-failure
    depends_on:
      - kibana
    environment:
      - KIBANA_HOST=kibana
      - KIBANA_PORT=5601
    volumes:
      - '/tmp/compose/infrastructure/monitoring/kibana/alert-rules.json:/usr/app/alert-rules.json'
      - '/tmp/compose/infrastructure/monitoring/kibana/setup-alerts.js:/usr/app/setup-alerts.js'
    networks:
      - overlay_net

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    restart: always
    deploy:
      labels:
        # https://doc.traefik.io/traefik/v1.7/configuration/backends/docker/#labels-overriding-default-behavior
        - 'traefik.enable=true'
        - 'traefik.frontend.rule=Host: kibana.{{hostname}}'
        - 'traefik.frontend.auth.basic.usersFile=/run/secrets/kibana-htpasswd'
        - 'traefik.port=5601'
        - 'traefik.docker.network=opencrvs_overlay_net'
    networks:
      - overlay_net
    volumes:
      - '/tmp/compose/infrastructure/monitoring/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z'
    depends_on:
      - elasticsearch

  # Configure mongo nodes as a replica set
  mongo1:
    command: --replSet rs0
    hostname: 'mongo1'
    container_name: 'mongo1'
    volumes:
      - '/data/mongo:/data/db'
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.data1 == true
    networks:
      - overlay_net

  mongo-rs-init:
    image: mongo:4.4
    depends_on:
      - mongo1
    command: bash -c 'sleep 20; mongo --host mongo1 --eval "rs.initiate({_id:\"rs0\",members:[{_id:0,host:\"mongo1:27017\"}]})"'
    deploy:
      restart_policy:
        condition: none
    networks:
      - overlay_net

  # Configure redis
  redis:
    networks:
      - overlay_net

  # Configure elasticsearch
  elasticsearch:
    volumes:
      - '/data/elasticsearch:/usr/share/elasticsearch/data'
      - '/data/backups/elasticsearch:/data/backups/elasticsearch'
      - '/tmp/compose/infrastructure/elasticsearch/elasticsearch.yml:/config/elasticsearch.yml'
      - '/tmp/compose/infrastructure/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml'
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.data1 == true
    networks:
      - overlay_net

  elastalert:
    image: jertel/elastalert2:2.3.0
    restart: unless-stopped
    volumes:
      - '/tmp/compose/infrastructure/monitoring/elastalert/elastalert.yaml:/opt/elastalert/config.yaml'
      - '/tmp/compose/infrastructure/monitoring/elastalert/rules:/opt/elastalert/rules'
    networks:
      - overlay_net
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.15.2
    depends_on:
      - elasticsearch
      - kibana
    cap_add: ['CHOWN', 'DAC_OVERRIDE', 'SETGID', 'SETUID']
    cap_drop: ['ALL']
    ports:
      - 8200:8200
    networks:
      - overlay_net
    deploy:
      replicas: 3
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=kibana:5601
        -E output.elasticsearch.hosts=["elasticsearch:9200"]
        -E output.elasticsearch.bulk_max_size=5120

  # Configure influxdb
  influxdb:
    volumes:
      - '/data/influxdb:/var/lib/influxdb'
      - '/data/backups/influxdb:/data/backups/influxdb'
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.data1 == true
    networks:
      - overlay_net

  # Configure webapps and add traefik config
  client:
    environment:
      - COUNTRY_CONFIG_URL=https://countryconfig.{{hostname}}
      - HOST={{hostname}}
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.frontend.rule=Host: register.{{hostname}},{{hostname}}'
        - 'traefik.frontend.redirect.regex=^https?://{{hostname}}/(.*)'
        - 'traefik.frontend.redirect.replacement=https://register.{{hostname}}/$${1}'
        - 'traefik.port=80'
        - 'traefik.docker.network=opencrvs_overlay_net'
      replicas: 2
    networks:
      - overlay_net

  components:
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.frontend.rule=Host: styleguide.{{hostname}},{{hostname}}'
        - 'traefik.frontend.redirect.regex=^https?://{{hostname}}/(.*)'
        - 'traefik.frontend.redirect.replacement=https://styleguide.{{hostname}}/$${1}'
        - 'traefik.port=80'
        - 'traefik.docker.network=opencrvs_overlay_net'
      replicas: 2
    networks:
      - overlay_net

  countryconfig:
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.frontend.rule=Host: countryconfig.{{hostname}}'
        - 'traefik.port=3040'
        - 'traefik.docker.network=opencrvs_overlay_net'
      replicas: 2
    environment:
      - APN_SERVICE_URL=http://apm-server:8200
    networks:
      - overlay_net

  login:
    environment:
      - COUNTRY_CONFIG_URL=https://countryconfig.{{hostname}}
      - HOST={{hostname}}
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.frontend.rule=Host: login.{{hostname}}'
        - 'traefik.port=80'
        - 'traefik.docker.network=opencrvs_overlay_net'
      replicas: 2
    networks:
      - overlay_net

  # Configure other service with deployment specifc details
  auth:
    secrets:
      - jwt-public-key.{{ts}}
      - jwt-private-key.{{ts}}
    environment:
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PRIVATE_KEY_PATH=/run/secrets/jwt-private-key.{{ts}}
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.frontend.rule=Host: auth.{{hostname}}'
        - 'traefik.port=4040'
        - 'traefik.docker.network=opencrvs_overlay_net'
      replicas: 2
    networks:
      - overlay_net

  user-mgnt:
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
      - MONGO_URL=mongodb://mongo1/user-mgnt?replicaSet=rs0
    deploy:
      replicas: 2
    networks:
      - overlay_net

  notification:
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
    deploy:
      replicas: 2
    networks:
      - overlay_net

  gateway:
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.frontend.rule=Host: gateway.{{hostname}}'
        - 'traefik.port=7070'
        - 'traefik.docker.network=opencrvs_overlay_net'
      replicas: 2
    networks:
      - overlay_net

  workflow:
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
    deploy:
      replicas: 2
    networks:
      - overlay_net

  search:
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
    deploy:
      replicas: 2
    networks:
      - overlay_net

  metrics:
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
    deploy:
      replicas: 2
    networks:
      - overlay_net

  config:
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
      - MONGO_URL=mongodb://mongo1/application-config?replicaSet=rs0
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.frontend.rule=Host: config.{{hostname}}'
        - 'traefik.port=2021'
        - 'traefik.docker.network=opencrvs_overlay_net'
      replicas: 2
    networks:
      - overlay_net

  # Configure other dependencies with deployment specifc details
  hearth:
    environment:
      - mongodb__url=mongodb://mongo1/hearth-dev?replicaSet=rs0
      - logger__level=warn
    depends_on:
      - mongo1
    deploy:
      replicas: 2
    secrets:
      - jwt-public-key.{{ts}}
    configs:
      - source: hearth-check-dupe-plugin.{{ts}}
        target: /src/hearth/lib/plugins/checkDuplicateTask.js
      - source: hearth-queryparam-extensions-conf.{{ts}}
        target: /src/hearth/config/queryparam-extensions.json
    networks:
      - overlay_net

  openhim-core:
    environment:
      - mongo_url=mongodb://mongo1/openhim-dev?replicaSet=rs0
      - mongo_atnaUrl=mongodb://mongo1/openhim-dev?replicaSet=rs0
    depends_on:
      - mongo1
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.docker.network=opencrvs_overlay_net'
        - 'traefik.openhim-api.frontend.rule=Host: openhim-api.{{hostname}}'
        - 'traefik.openhim-api.protocol=https'
        - 'traefik.openhim-api.port=8080'
        - 'traefik.router.frontend.rule=Host: api.{{hostname}}'
        - 'traefik.router.port=5001'
      replicas: 2
    networks:
      - overlay_net

  openhim-console:
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.frontend.rule=Host: openhim.{{hostname}}'
        - 'traefik.port=80'
        - 'traefik.docker.network=opencrvs_overlay_net'
      replicas: 2
    configs:
      - source: openhim-console-conf.{{ts}}
        target: /usr/share/nginx/html/config/default.json
    networks:
      - overlay_net

  logspout:
    image: gliderlabs/logspout:latest
    restart: unless-stopped
    volumes:
      - /etc/hostname:/etc/host_hostname:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: syslog://${PAPERTRAIL:-logs5.papertrailapp.com:24584}
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.20'
          memory: 256M
        reservations:
          cpus: '0.10'
          memory: 128M
    networks:
      - overlay_net

  webhooks:
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - APN_SERVICE_URL=http://apm-server:8200
      - MONGO_URL=mongodb://mongo1/webhooks?replicaSet=rs0
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.frontend.rule=Host: webhooks.{{hostname}}'
        - 'traefik.port=2525'
        - 'traefik.docker.network=opencrvs_overlay_net'
      replicas: 2
    networks:
      - overlay_net

secrets:
  jwt-public-key.{{ts}}:
    external: true
  jwt-private-key.{{ts}}:
    external: true
  kibana-htpasswd:
    external: true
configs:
  openhim-console-conf.{{ts}}:
    file: ./infrastructure/openhim-console-config.deploy.json
  traefik.{{ts}}:
    file: ./infrastructure/traefik.toml
  hearth-check-dupe-plugin.{{ts}}:
    file: ./infrastructure/hearth-plugins/checkDuplicateTask.js
  hearth-queryparam-extensions-conf.{{ts}}:
    file: ./infrastructure/hearth-queryparam-extensions.json
  metricbeat-conf.{{ts}}:
    file: ./infrastructure/monitoring/beats/metricbeat.yml
networks:
  overlay_net:
    driver: overlay
    attachable: true
